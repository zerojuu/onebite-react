// 원시 타입 (=불변값 / 값이 변경되더라고 원본 메모리의 값은 변경되지 않아서) : 값 자체로써 변수에 저장되고 복사됨
// 참조 타입 (=가변값 / 값이 변경되면 원본 메모리의 값 변경) : 참조값(메모리 주소)을 통해 변수에 저장되고 복사됨

// 얕은 복사
let o1 = { name: "이정환" };
let o2 = o1; // 객체의 참조값을 복사 -> 원복 객체가 수정될 수 있어 문제 발생

// 깊은 복사
let o3 = { name: "Lee" };
let o4 = { ...o3 }; // 객체의 값만 따로 복사 -> 원복 객체는 수정되지 않음

// 객체간의 비교 연산은 참조값을 비교함
// === : 얕은 비교
console.log(o1 === o2); // true
console.log(o3 === o4); // false -> 같은 객체이지만 참조값은 다름

// JSON.stringify : 깊은 비교, 객체를 JSON 문자열로 변환, 자바스크립트 내장 함수
console.log(JSON.stringify(o3) === JSON.stringify(o4)); // true
